# CI wxRuby release workflow
name: Release build

on:
  push:
    tags:
      - v*
    paths-ignore:
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['ruby']
    env:
      GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - name: Setup Ruby gems
        run: |
          bundle config set --local with documentation
          bundle install

      - name: Run tests
        run: bundle exec rake test

      - name: Build gem
        run: bundle exec rake gem

      - name: Upload gem to release
        if: github.event_name != 'workflow_dispatch'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: pkg/*.gem
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

      - name: Publish Gem on RubyGems
        if: github.event_name != 'workflow_dispatch'
        run: |
          gem push pkg/*.gem

      - name: Build HTML docs
        run: |
          bundle exec yardoc

      - name: Upload doc archive
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v4
        with:
          name: firm-html-reference
          path: rdoc
          overwrite: true

      - name: Setup Pages
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload Yard output only
          path: rdoc

      - name: Deploy to GitHub Pages
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Archive html references docs
        run: |
          tar \
          --dereference --hard-dereference \
          --directory "rdoc" \
          -czf "$RUNNER_TEMP/firm-html-reference.tar.gz" \
          "."

      - name: Upload doc archive as release asset
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ runner.temp }}/firm-html-reference.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
